--!strict

--[[

A LocalScript to create two beautiful, draggable, and dynamic UI menus.

This script is designed to be placed in StarterPlayerScripts.


This version has been optimized for better performance and

addresses the issue of tracers being too big and invisible through objects.

]]



-- SERVICES

local Players = game:GetService("Players")

local ReplicatedStorage = game:GetService("ReplicatedStorage")

local Workspace = game:GetService("Workspace")

local TweenService = game:GetService("TweenService")

local UserInputService = game:GetService("UserInputService")

local RunService = game:GetService("RunService")



-- CONFIGURATION

local UI_SIZE = UDim2.new(0, 300, 0, 400)

local MINIMIZED_SIZE = UDim2.new(0, 300, 0, 40)

local TITLE_FONT = Enum.Font.SourceSansBold

local HEADER_COLOR = Color3.fromRGB(30, 30, 30)

local PRIMARY_COLOR = Color3.fromRGB(45, 45, 45)

local ACCENT_COLOR = Color3.fromRGB(0, 170, 255)

local NPC_ACCENT_COLOR = Color3.fromRGB(0, 85, 255)

local TEXT_COLOR = Color3.fromRGB(255, 255, 255)

local SECONDARY_ACCENT_COLOR = Color3.fromRGB(255, 170, 0)

local PLAYER_ACCENT_COLOR = Color3.fromRGB(255, 170, 0)

local NPC_ESP_DISTANCE = 500

-- NEW CONFIGURATION FOR TRACERS

local TRACER_COLOR = Color3.fromRGB(255, 170, 0)

local TRACER_THICKNESS = 0.2 -- Adjusted for a smaller size

local TRACER_TRANSPARENCY = 0.2 -- Changed to make the tracers more visible



-- Get the player's PlayerGui to store the UI

local player = Players.LocalPlayer

local PlayerGui = player:WaitForChild("PlayerGui")

local character = player.Character or player.CharacterAdded:Wait()

local myRootPart: Part = character:FindFirstChild("HumanoidRootPart") :: any



-- Create a container for the tracers to ensure they are always visible

local TracerContainer = Instance.new("Folder")

TracerContainer.Name = "TracerContainer"

TracerContainer.Parent = Workspace



-- =================================================================

-- === Boss Status Menu (Menu 1) ===================================

-- =================================================================



-- SETUP UI ELEMENTS FOR MENU 1

local screenGui1 = Instance.new("ScreenGui")

screenGui1.Name = "SawBossMenu"

screenGui1.ResetOnSpawn = false

screenGui1.Parent = PlayerGui



local mainFrame1 = Instance.new("Frame")

mainFrame1.Name = "MainFrame"

mainFrame1.Size = UI_SIZE

mainFrame1.Position = UDim2.new(0.5, -150, 0.5, -100)

mainFrame1.BackgroundColor3 = PRIMARY_COLOR

mainFrame1.BorderSizePixel = 0

mainFrame1.AnchorPoint = Vector2.new(0.5, 0.5)

mainFrame1.ClipsDescendants = true

mainFrame1.Parent = screenGui1



local corner1 = Instance.new("UICorner")

corner1.CornerRadius = UDim.new(0, 8)

corner1.Parent = mainFrame1



local stroke1 = Instance.new("UIStroke")

stroke1.Color = Color3.fromRGB(60, 60, 60)

stroke1.Thickness = 1.5

stroke1.Parent = mainFrame1



local gradient1 = Instance.new("UIGradient")

gradient1.Color = ColorSequence.new(

Color3.fromRGB(60, 60, 60),

Color3.fromRGB(45, 45, 45)

)

gradient1.Rotation = 90

gradient1.Parent = mainFrame1



local titleBar1 = Instance.new("Frame")

titleBar1.Name = "TitleBar"

titleBar1.Size = UDim2.new(1, 0, 0, 40)

titleBar1.BackgroundColor3 = HEADER_COLOR

titleBar1.BorderSizePixel = 0

titleBar1.Parent = mainFrame1



local titleBarCorner1 = Instance.new("UICorner")

titleBarCorner1.CornerRadius = UDim.new(0, 8)

titleBarCorner1.Parent = titleBar1



local titleLabel1 = Instance.new("TextLabel")

titleLabel1.Name = "StatusLabel"

titleLabel1.Size = UDim2.new(1, -70, 1, 0)

titleLabel1.Position = UDim2.new(0, 5, 0, 0)

titleLabel1.BackgroundTransparency = 1

titleLabel1.TextColor3 = TEXT_COLOR

titleLabel1.TextScaled = true

titleLabel1.Font = TITLE_FONT

titleLabel1.Text = "Checking for bosses..."

titleLabel1.TextXAlignment = Enum.TextXAlignment.Left

titleLabel1.Parent = titleBar1



local minimizeButton1 = Instance.new("TextButton")

minimizeButton1.Name = "MinimizeButton"

minimizeButton1.Size = UDim2.new(0, 30, 1, -5)

minimizeButton1.Position = UDim2.new(1, -65, 0, 2)

minimizeButton1.BackgroundColor3 = PRIMARY_COLOR

minimizeButton1.BorderSizePixel = 0

minimizeButton1.Text = "-"

minimizeButton1.TextColor3 = TEXT_COLOR

minimizeButton1.TextSize = 25

minimizeButton1.Font = TITLE_FONT

minimizeButton1.Parent = titleBar1



local nukeButton1 = Instance.new("TextButton")

nukeButton1.Name = "NukeButton"

nukeButton1.Size = UDim2.new(0, 30, 1, -5)

nukeButton1.Position = UDim2.new(1, -32, 0, 2)

nukeButton1.BackgroundColor3 = Color3.fromRGB(255, 50, 50)

nukeButton1.BorderSizePixel = 0

nukeButton1.Text = "X"

nukeButton1.TextColor3 = TEXT_COLOR

nukeButton1.TextSize = 20

nukeButton1.Font = TITLE_FONT

nukeButton1.Parent = titleBar1



-- DRAGGING FUNCTIONALITY FOR MENU 1

local isDragging1 = false

local dragStartPos1 = Vector2.new(0, 0)

local dragStartFramePosition1 = UDim2.new(0, 0, 0, 0)



titleBar1.InputBegan:Connect(function(input)

if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then

isDragging1 = true

dragStartPos1 = input.Position

dragStartFramePosition1 = mainFrame1.Position

UserInputService.MouseIconEnabled = false

end

end)



UserInputService.InputEnded:Connect(function(input)

if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then

isDragging1 = false

UserInputService.MouseIconEnabled = true

end

end)



UserInputService.InputChanged:Connect(function(input)

if isDragging1 and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then

local delta = input.Position - dragStartPos1

local newPosition = dragStartFramePosition1 + UDim2.new(0, delta.X, 0, delta.Y)

mainFrame1.Position = newPosition

end

end)



-- BUTTON FUNCTIONALITY FOR MENU 1

local isMinimized1 = false

local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)



minimizeButton1.MouseButton1Click:Connect(function()

isMinimized1 = not isMinimized1



local targetSize

if isMinimized1 then

targetSize = MINIMIZED_SIZE

else

targetSize = UI_SIZE

end

local targetClipsDescendants = not isMinimized1



local tween = TweenService:Create(mainFrame1, tweenInfo, {Size = targetSize})

tween:Play()



task.delay(0.2, function()

mainFrame1.ClipsDescendants = targetClipsDescendants

end)



if isMinimized1 then

minimizeButton1.Text = "+"

else

minimizeButton1.Text = "-"

end

end)



-- DYNAMIC STATUS CHECK FOR MENU 1

local enemiesFolder = Workspace:FindFirstChild("Enemies")



if not enemiesFolder then

titleLabel1.Text = "No enemies folder found!"

end



task.spawn(function()

while task.wait(1) do

if not screenGui1.Parent then break end

if enemiesFolder then

local sawBoss = enemiesFolder:FindFirstChild("Saw")

if sawBoss and sawBoss:IsA("Model") then

titleLabel1.Text = "Bosses spawned!"

else

titleLabel1.Text = "No bosses spawned"

end

end

end

end)



-- =================================================================

-- === Player & NPC ESP Menu (Menu 2) ==============================

-- =================================================================



-- SETUP UI ELEMENTS FOR MENU 2

local screenGui2 = Instance.new("ScreenGui")

screenGui2.Name = "PlayerESPMenu"

screenGui2.ResetOnSpawn = false

screenGui2.Parent = PlayerGui



local mainFrame2 = Instance.new("Frame")

mainFrame2.Name = "MainFrame"

mainFrame2.Size = UI_SIZE

mainFrame2.Position = UDim2.new(0.5, -150, 0.5, 100)

mainFrame2.BackgroundColor3 = PRIMARY_COLOR

mainFrame2.BorderSizePixel = 0

mainFrame2.AnchorPoint = Vector2.new(0.5, 0.5)

mainFrame2.ClipsDescendants = true

mainFrame2.Parent = screenGui2



local corner2 = Instance.new("UICorner")

corner2.CornerRadius = UDim.new(0, 8)

corner2.Parent = mainFrame2



local stroke2 = Instance.new("UIStroke")

stroke2.Color = Color3.fromRGB(60, 60, 60)

stroke2.Thickness = 1.5

stroke2.Parent = mainFrame2



local gradient2 = Instance.new("UIGradient")

gradient2.Color = ColorSequence.new(

Color3.fromRGB(60, 60, 60),

Color3.fromRGB(45, 45, 45)

)

gradient2.Rotation = 90

gradient2.Parent = mainFrame2



local titleBar2 = Instance.new("Frame")

titleBar2.Name = "TitleBar"

titleBar2.Size = UDim2.new(1, 0, 0, 40)

titleBar2.BackgroundColor3 = HEADER_COLOR

titleBar2.BorderSizePixel = 0

titleBar2.Parent = mainFrame2



local titleBarCorner2 = Instance.new("UICorner")

titleBarCorner2.CornerRadius = UDim.new(0, 8)

titleBarCorner2.Parent = titleBar2



local titleLabel2 = Instance.new("TextLabel")

titleLabel2.Name = "TitleLabel"

titleLabel2.Size = UDim2.new(1, -70, 1, 0)

titleLabel2.Position = UDim2.new(0, 5, 0, 0)

titleLabel2.BackgroundTransparency = 1

titleLabel2.TextColor3 = SECONDARY_ACCENT_COLOR

titleLabel2.TextScaled = true

titleLabel2.Font = TITLE_FONT

titleLabel2.Text = "Player & NPC ESP Menu"

titleLabel2.TextXAlignment = Enum.TextXAlignment.Left

titleLabel2.Parent = titleBar2



local minimizeButton2 = Instance.new("TextButton")

minimizeButton2.Name = "MinimizeButton"

minimizeButton2.Size = UDim2.new(0, 30, 1, -5)

minimizeButton2.Position = UDim2.new(1, -65, 0, 2)

minimizeButton2.BackgroundColor3 = PRIMARY_COLOR

minimizeButton2.BorderSizePixel = 0

minimizeButton2.Text = "-"

minimizeButton2.TextColor3 = TEXT_COLOR

minimizeButton2.TextSize = 25

minimizeButton2.Font = TITLE_FONT

minimizeButton2.Parent = titleBar2



local nukeButton2 = Instance.new("TextButton")

nukeButton2.Name = "NukeButton"

nukeButton2.Size = UDim2.new(0, 30, 1, -5)

nukeButton2.Position = UDim2.new(1, -32, 0, 2)

nukeButton2.BackgroundColor3 = Color3.fromRGB(255, 50, 50)

nukeButton2.BorderSizePixel = 0

nukeButton2.Text = "X"

nukeButton2.TextColor3 = TEXT_COLOR

nukeButton2.TextSize = 20

nukeButton2.Font = TITLE_FONT

nukeButton2.Parent = titleBar2



-- Player ESP Section

local playerEspLabel = Instance.new("TextLabel")

playerEspLabel.Name = "PlayerEspLabel"

playerEspLabel.Text = "Player ESP Options"

playerEspLabel.Size = UDim2.new(1, -20, 0, 25)

playerEspLabel.Position = UDim2.new(0, 10, 0, 50)

playerEspLabel.BackgroundTransparency = 1

playerEspLabel.TextColor3 = SECONDARY_ACCENT_COLOR

playerEspLabel.TextScaled = true

playerEspLabel.Font = TITLE_FONT

playerEspLabel.TextXAlignment = Enum.TextXAlignment.Left

playerEspLabel.Parent = mainFrame2



local playerEspButtonsContainer = Instance.new("Frame")

playerEspButtonsContainer.Name = "PlayerEspButtonsContainer"

playerEspButtonsContainer.Size = UDim2.new(1, -20, 0.35, 0)

playerEspButtonsContainer.Position = UDim2.new(0, 10, 0, 80)

playerEspButtonsContainer.BackgroundTransparency = 1

playerEspButtonsContainer.Parent = mainFrame2



local playerListLayout = Instance.new("UIListLayout")

playerListLayout.Padding = UDim.new(0, 5)

playerListLayout.FillDirection = Enum.FillDirection.Vertical

playerListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center

playerListLayout.Parent = playerEspButtonsContainer



local playerEspTypes = {

["Username ESP"] = false,

["Distance ESP"] = false,

["Player Tracing"] = false,

}



local playerCheckboxState = {

["Username ESP"] = false,

["Distance ESP"] = false,

["Player Tracing"] = false,

}



local function createPlayerEspCheckbox(espName)

local button = Instance.new("TextButton")

button.Name = espName .. "Checkbox"

button.Size = UDim2.new(1, 0, 0, 30)

button.BackgroundTransparency = 1

button.BorderSizePixel = 0

button.Text = ""

button.Parent = playerEspButtonsContainer



local buttonCorner = Instance.new("UICorner")

buttonCorner.CornerRadius = UDim.new(0, 5)

buttonCorner.Parent = button



local checkboxBox = Instance.new("Frame")

checkboxBox.Name = "CheckboxBox"

checkboxBox.Size = UDim2.new(0, 20, 0, 20)

checkboxBox.Position = UDim2.new(0, 5, 0.5, -10)

checkboxBox.BackgroundColor3 = PRIMARY_COLOR

checkboxBox.BorderSizePixel = 1

checkboxBox.BorderColor3 = Color3.fromRGB(60, 60, 60)

checkboxBox.Parent = button



local boxCorner = Instance.new("UICorner")

boxCorner.CornerRadius = UDim.new(0, 5)

boxCorner.Parent = checkboxBox



local checkboxIcon = Instance.new("ImageLabel")

checkboxIcon.Name = "Checkmark"

checkboxIcon.BackgroundTransparency = 1

checkboxIcon.Size = UDim2.new(1, 0, 1, 0)

checkboxIcon.Image = "rbxassetid://603417770"

checkboxIcon.ImageColor3 = PLAYER_ACCENT_COLOR

checkboxIcon.Visible = false

checkboxIcon.Parent = checkboxBox



local espLabel = Instance.new("TextLabel")

espLabel.Name = "EspNameLabel"

espLabel.Size = UDim2.new(1, -30, 1, 0)

espLabel.Position = UDim2.new(0, 30, 0, 0)

espLabel.BackgroundTransparency = 1

espLabel.TextColor3 = TEXT_COLOR

espLabel.Text = espName

espLabel.TextScaled = true

espLabel.Font = TITLE_FONT

espLabel.TextXAlignment = Enum.TextXAlignment.Left

espLabel.Parent = button



button.MouseButton1Click:Connect(function()

local newState = not playerCheckboxState[espName]

playerCheckboxState[espName] = newState



if newState then

checkboxIcon.Visible = true

checkboxBox.BackgroundColor3 = PLAYER_ACCENT_COLOR

else

checkboxIcon.Visible = false

checkboxBox.BackgroundColor3 = PRIMARY_COLOR

end

end)

end



for espName, _ in pairs(playerEspTypes) do

createPlayerEspCheckbox(espName)

end



-- NPC ESP Section

local npcEspLabel = Instance.new("TextLabel")

npcEspLabel.Name = "NpcEspLabel"

npcEspLabel.Text = "NPC ESP Options"

npcEspLabel.Size = UDim2.new(1, -20, 0, 25)

npcEspLabel.Position = UDim2.new(0, 10, 0, 180)

npcEspLabel.BackgroundTransparency = 1

npcEspLabel.TextColor3 = ACCENT_COLOR

npcEspLabel.TextScaled = true

npcEspLabel.Font = TITLE_FONT

npcEspLabel.TextXAlignment = Enum.TextXAlignment.Left

npcEspLabel.Parent = mainFrame2



local npcEspButtonsContainer = Instance.new("Frame")

npcEspButtonsContainer.Name = "NpcEspButtonsContainer"

npcEspButtonsContainer.Size = UDim2.new(1, -20, 0.45, 0)

npcEspButtonsContainer.Position = UDim2.new(0, 10, 0, 210)

npcEspButtonsContainer.BackgroundTransparency = 1

npcEspButtonsContainer.Parent = mainFrame2



local listLayout = Instance.new("UIListLayout")

listLayout.Padding = UDim.new(0, 5)

listLayout.FillDirection = Enum.FillDirection.Vertical

listLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center

listLayout.Parent = npcEspButtonsContainer



local npcTypes = {

["Set Home Point"] = false,

["Boat Dealer"] = false,

}



local npcCheckboxState = {

["Set Home Point"] = false,

["Boat Dealer"] = false,

}



local function createNpcEspCheckbox(npcName)

local button = Instance.new("TextButton")

button.Name = npcName .. "Checkbox"

button.Size = UDim2.new(1, 0, 0, 30)

button.BackgroundTransparency = 1

button.BorderSizePixel = 0

button.Text = ""

button.Parent = npcEspButtonsContainer



local buttonCorner = Instance.new("UICorner")

buttonCorner.CornerRadius = UDim.new(0, 5)

buttonCorner.Parent = button



local checkboxBox = Instance.new("Frame")

checkboxBox.Name = "CheckboxBox"

checkboxBox.Size = UDim2.new(0, 20, 0, 20)

checkboxBox.Position = UDim2.new(0, 5, 0.5, -10)

checkboxBox.BackgroundColor3 = PRIMARY_COLOR

checkboxBox.BorderSizePixel = 1

checkboxBox.BorderColor3 = Color3.fromRGB(60, 60, 60)

checkboxBox.Parent = button



local boxCorner = Instance.new("UICorner")

boxCorner.CornerRadius = UDim.new(0, 5)

boxCorner.Parent = checkboxBox



local checkboxIcon = Instance.new("ImageLabel")

checkboxIcon.Name = "Checkmark"

checkboxIcon.BackgroundTransparency = 1

checkboxIcon.Size = UDim2.new(1, 0, 1, 0)

checkboxIcon.Image = "rbxassetid://603417770"

checkboxIcon.ImageColor3 = ACCENT_COLOR

checkboxIcon.Visible = false

checkboxIcon.Parent = checkboxBox



local npcLabel = Instance.new("TextLabel")

npcLabel.Name = "NpcNameLabel"

npcLabel.Size = UDim2.new(1, -30, 1, 0)

npcLabel.Position = UDim2.new(0, 30, 0, 0)

npcLabel.BackgroundTransparency = 1

npcLabel.TextColor3 = TEXT_COLOR

npcLabel.Text = npcName

npcLabel.TextScaled = true

npcLabel.Font = TITLE_FONT

npcLabel.TextXAlignment = Enum.TextXAlignment.Left

npcLabel.Parent = button



button.MouseButton1Click:Connect(function()

local newState = not npcCheckboxState[npcName]

npcCheckboxState[npcName] = newState



if newState then

checkboxIcon.Visible = true

checkboxBox.BackgroundColor3 = NPC_ACCENT_COLOR

else

checkboxIcon.Visible = false

checkboxBox.BackgroundColor3 = PRIMARY_COLOR

end

end)

end



for npcName, _ in pairs(npcTypes) do

createNpcEspCheckbox(npcName)

end



-- DRAGGING FUNCTIONALITY FOR MENU 2

local isDragging2 = false

local dragStartPos2 = Vector2.new(0, 0)

local dragStartFramePosition2 = UDim2.new(0, 0, 0, 0)



titleBar2.InputBegan:Connect(function(input)

if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then

isDragging2 = true

dragStartPos2 = input.Position

dragStartFramePosition2 = mainFrame2.Position

UserInputService.MouseIconEnabled = false

end

end)



UserInputService.InputEnded:Connect(function(input)

if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then

isDragging2 = false

UserInputService.MouseIconEnabled = true

end

end)



UserInputService.InputChanged:Connect(function(input)

if isDragging2 and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then

local delta = input.Position - dragStartPos2

local newPosition = dragStartFramePosition2 + UDim2.new(0, delta.X, 0, delta.Y)

mainFrame2.Position = newPosition

end

end)



-- BUTTON FUNCTIONALITY FOR MENU 2

local isMinimized2 = false

minimizeButton2.MouseButton1Click:Connect(function()

isMinimized2 = not isMinimized2



local targetSize

if isMinimized2 then

targetSize = MINIMIZED_SIZE

else

targetSize = UI_SIZE

end

local targetClipsDescendants = not isMinimized2



local tween = TweenService:Create(mainFrame2, tweenInfo, {Size = targetSize})

tween:Play()



task.delay(0.2, function()

mainFrame2.ClipsDescendants = targetClipsDescendants

end)



if isMinimized2 then

minimizeButton2.Text = "+"

else

minimizeButton2.Text = "-"

end

end)



-- ESP FUNCTIONALITY

local playerLabels = {}

local npcLabels = {}

local playerTracers = {}

local npcsFolder = Workspace:WaitForChild("NPCs")



-- PLAYER ESP FUNCTIONS

local function createPlayerLabel()

local label = Instance.new("TextLabel")

label.BackgroundTransparency = 1

label.Size = UDim2.new(0, 100, 0, 20)

label.TextColor3 = SECONDARY_ACCENT_COLOR

label.TextStrokeColor3 = Color3.new(0, 0, 0)

label.TextStrokeTransparency = 0

label.TextScaled = true

label.Font = Enum.Font.SourceSansBold

label.ZIndex = 10

label.Parent = screenGui2

return label

end



local function createPlayerLabelsForExistingPlayers()

for _, p in ipairs(Players:GetPlayers()) do

if p ~= player and not playerLabels[p] then

playerLabels[p] = createPlayerLabel()

end

end

end



local function updatePlayerLabels()

for p, label in pairs(playerLabels) do

local character = p.Character

if not character or not character:FindFirstChild("HumanoidRootPart") then

label.Visible = false

continue

end



local rootPart = character.HumanoidRootPart

local screenPos, onScreen = Workspace.CurrentCamera:WorldToScreenPoint(rootPart.Position + Vector3.new(0, 5, 0))



if onScreen then

local labelText = ""

local labelWidth = 100



if playerCheckboxState["Username ESP"] and playerCheckboxState["Distance ESP"] then

labelText = p.Name .. " (" .. tostring(math.floor((rootPart.Position - myRootPart.Position).Magnitude * 0.28 * 10) / 10) .. " meters)"

labelWidth = 250

elseif playerCheckboxState["Username ESP"] then

labelText = p.Name

labelWidth = 125

elseif playerCheckboxState["Distance ESP"] then

local distanceInMeters = (rootPart.Position - myRootPart.Position).Magnitude * 0.28

local formattedDistance = math.floor(distanceInMeters * 10) / 10

labelText = formattedDistance .. " meters"

labelWidth = 125

end



label.Size = UDim2.new(0, labelWidth, 0, 20)

label.Position = UDim2.new(0, screenPos.X - label.AbsoluteSize.X / 2, 0, screenPos.Y - label.AbsoluteSize.Y / 2)

label.Text = labelText

label.Visible = true

else

label.Visible = false

end

end

end



local function removeAllPlayerLabels()

for _, label in pairs(playerLabels) do

if label and label.Parent then

label:Destroy()

end

end

playerLabels = {}

end



local function createPlayerTracer()

local tracer = Instance.new("Part")

tracer.Name = "Tracer"

tracer.Anchored = true

tracer.CanCollide = false


-- Change Part material to ForceField so it's always visible

tracer.Material = Enum.Material.ForceField

tracer.Transparency = TRACER_TRANSPARENCY


tracer.Color = TRACER_COLOR

tracer.Size = Vector3.new(1, 1, 1)

tracer.Parent = TracerContainer


local mesh = Instance.new("CylinderMesh")

mesh.Parent = tracer


return tracer

end



local function updatePlayerTracer(tracer, targetPart, myRootPart)

if not myRootPart or not targetPart or not targetPart.Parent then

if tracer then tracer:Destroy() end

return

end


local startPos = myRootPart.Position

local endPos = targetPart.Position

local distance = (startPos - endPos).Magnitude

local middle = startPos:Lerp(endPos, 0.5)



local tracerCFrame = CFrame.new(middle, endPos)

tracerCFrame = tracerCFrame * CFrame.Angles(math.pi / 2, 0, 0)

tracer.CFrame = tracerCFrame



local mesh = tracer:FindFirstChildOfClass("CylinderMesh")

if mesh then

mesh.Scale = Vector3.new(TRACER_THICKNESS, distance, TRACER_THICKNESS)

end


tracer.Transparency = TRACER_TRANSPARENCY

end



local function updatePlayerTracers()

local playersWithTracers = {}


for _, p in ipairs(Players:GetPlayers()) do

if p ~= player then

local targetCharacter = p.Character

local targetPart = targetCharacter and targetCharacter:FindFirstChild("HumanoidRootPart")



if targetPart and targetPart.Position and myRootPart.Position then

local tracer = playerTracers[p]

if not tracer then

tracer = createPlayerTracer()

playerTracers[p] = tracer

end


updatePlayerTracer(tracer, targetPart, myRootPart)

playersWithTracers[p] = true

end

end

end



for p, tracer in pairs(playerTracers) do

if not playersWithTracers[p] then

tracer:Destroy()

playerTracers[p] = nil

end

end

end



local function removeAllPlayerTracers()

for p, tracer in pairs(playerTracers) do

if tracer and tracer.Parent then

tracer:Destroy()

end

end

playerTracers = {}

end



-- NPC ESP FUNCTIONS

local function createNpcLabel(npcName)

local label = Instance.new("TextLabel")

label.BackgroundTransparency = 1

label.Size = UDim2.new(0, 100, 0, 20)

label.TextColor3 = NPC_ACCENT_COLOR

label.TextStrokeColor3 = Color3.new(0, 0, 0)

label.TextStrokeTransparency = 0

label.TextScaled = true

label.Font = Enum.Font.SourceSansBold

label.Text = npcName

label.Name = npcName .. "ESPLabel"

label.ZIndex = 10

label.Parent = screenGui2

return label

end



local function updateNpcLabels()

local existingNpcs = {}

for _, npc in ipairs(npcsFolder:GetChildren()) do

if npc:IsA("Model") and npc.Name and npcCheckboxState[npc.Name] and npc:FindFirstChild("HumanoidRootPart") then

local rootPart = npc.HumanoidRootPart

local distance = (myRootPart.Position - rootPart.Position).Magnitude

if distance <= NPC_ESP_DISTANCE then

existingNpcs[npc] = true

if not npcLabels[npc] then

npcLabels[npc] = createNpcLabel(npc.Name)

end


local label = npcLabels[npc]

local screenPos, onScreen = Workspace.CurrentCamera:WorldToScreenPoint(rootPart.Position + Vector3.new(0, 5, 0))

if onScreen then

label.Position = UDim2.new(0, screenPos.X - label.AbsoluteSize.X / 2, 0, screenPos.Y - label.AbsoluteSize.Y / 2)

label.Visible = true

else

label.Visible = false

end

end

end

end



-- Clean up labels for NPCs that are no longer in range or removed

for npc, label in pairs(npcLabels) do

if not existingNpcs[npc] then

label:Destroy()

npcLabels[npc] = nil

end

end

end



local function removeAllNpcLabels()

for _, label in pairs(npcLabels) do

if label and label.Parent then

label:Destroy()

end

end

npcLabels = {}

end



-- EVENT HANDLING

-- We'll manage creation/removal of labels and tracers here instead of in the main loop

Players.PlayerAdded:Connect(function(p)

if p ~= player then

playerLabels[p] = createPlayerLabel()

playerTracers[p] = createPlayerTracer()

end

end)



Players.PlayerRemoving:Connect(function(p)

local label = playerLabels[p]

if label then

label:Destroy()

playerLabels[p] = nil

end

local tracer = playerTracers[p]

if tracer then

tracer:Destroy()

playerTracers[p] = nil

end

end)



-- Initialize labels for existing players on startup

createPlayerLabelsForExistingPlayers()



-- Main ESP loop

RunService.RenderStepped:Connect(function()

myRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")

if not myRootPart then return end



-- Player ESP

local isPlayerLabelEspActive = playerCheckboxState["Username ESP"] or playerCheckboxState["Distance ESP"]

local isTracingActive = playerCheckboxState["Player Tracing"]



if isPlayerLabelEspActive then

updatePlayerLabels()

else

-- If ESP is disabled, hide all labels instead of destroying them

for _, label in pairs(playerLabels) do

label.Visible = false

end

end



-- Player Tracers

if isTracingActive then

updatePlayerTracers()

else

for _, tracer in pairs(playerTracers) do

tracer.Transparency = 1 -- Hide tracers by making them transparent

end

end



-- NPC ESP

if npcCheckboxState["Set Home Point"] or npcCheckboxState["Boat Dealer"] then

updateNpcLabels()

else

-- If NPC ESP is off, hide all labels

for _, label in pairs(npcLabels) do

label.Visible = false

end

end

end)



local function checkAndDestroyScript()

if not screenGui1.Parent and not screenGui2.Parent then

-- Clean up the tracer container when the menus are closed

if TracerContainer then

TracerContainer:Destroy()

end

script:Destroy()

end

end



nukeButton1.MouseButton1Click:Connect(function()

screenGui1:Destroy()

checkAndDestroyScript()

end)



nukeButton2.MouseButton1Click:Connect(function()

removeAllPlayerLabels()

removeAllNpcLabels()

removeAllPlayerTracers()


for espName, _ in pairs(playerCheckboxState) do

playerCheckboxState[espName] = false

end

for npcName, _ in pairs(npcCheckboxState) do

npcCheckboxState[npcName] = false

end


screenGui2:Destroy()

checkAndDestroyScript()

end)
