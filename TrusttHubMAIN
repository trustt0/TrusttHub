-- Teleport Logic
local currentTeleportTween = nil
teleportToggleButton.MouseButton1Click:Connect(function()
	local isCurrentlyEnabled = teleportCheckmark.Visible
	local newEnabledState = not isCurrentlyEnabled

	teleportCheckmark.Visible = newEnabledState
	TweenService:Create(teleportToggleBox, tweenInfo, {BackgroundColor3 = if newEnabledState then TELEPORT_ACCENT else Color3.fromRGB(80, 80, 80)}):Play()

	if newEnabledState then
		-- START TELEPORT
		if currentTeleportTween then
			currentTeleportTween:Cancel()
		end

		local myRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
		if not myRootPart then
			teleportStatusLabel.Text = "Could not find character to teleport!"
			teleportStatusLabel.TextColor3 = BOSS_ACCENT
			teleportCheckmark.Visible = false
			TweenService:Create(teleportToggleBox, tweenInfo, {BackgroundColor3 = Color3.fromRGB(80, 80, 80)}):Play()
			return
		end
		
		if not selectedLocation then
			teleportStatusLabel.Text = "Please select a location first."
			teleportStatusLabel.TextColor3 = BOSS_ACCENT
			teleportCheckmark.Visible = false
			TweenService:Create(teleportToggleBox, tweenInfo, {BackgroundColor3 = Color3.fromRGB(80, 80, 80)}):Play()
			return
		end
		
		local targetCFrame = locations[selectedLocation]
		if not targetCFrame then
			teleportStatusLabel.Text = selectedLocation .. " coordinates not found!"
			teleportStatusLabel.TextColor3 = BOSS_ACCENT
			teleportCheckmark.Visible = false
			TweenService:Create(teleportToggleBox, tweenInfo, {BackgroundColor3 = Color3.fromRGB(80, 80, 80)}):Play()
			return
		end
		
		local distance = (myRootPart.Position - targetCFrame.Position).Magnitude
		local tweenTime = distance / currentTeleportSpeed

		teleportStatusLabel.Text = "Teleporting to " .. selectedLocation .. "..."
		teleportStatusLabel.TextColor3 = TELEPORT_ACCENT
		
		currentTeleportTween = TweenService:Create(myRootPart, TweenInfo.new(tweenTime, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {CFrame = targetCFrame})
		
		currentTeleportTween.Completed:Connect(function(state)
			currentTeleportTween = nil
			if state == Enum.TweenStatus.Completed then
				teleportStatusLabel.Text = "Successfully teleported to " .. selectedLocation .. "."
				teleportStatusLabel.TextColor3 = FONT_COLOR
			elseif state == Enum.TweenStatus.Canceled then
				teleportStatusLabel.Text = "Teleport canceled."
				teleportStatusLabel.TextColor3 = FONT_COLOR
			end
			
			-- The toggle is already turned off when this runs
			teleportCheckmark.Visible = false
			TweenService:Create(teleportToggleBox, tweenInfo, {BackgroundColor3 = Color3.fromRGB(80, 80, 80)}):Play()
		end)
		
		currentTeleportTween:Play()
	else
		-- CANCEL TELEPORT
		if currentTeleportTween then
			currentTeleportTween:Cancel()
			currentTeleportTween = nil
		end
	end
end)
