--!strict
--[[
	A LocalScript to create a single, modern, enhanced, and dynamic UI menu.
	This script is designed to be placed in StarterPlayerScripts.
	
	This version includes the full UI, with a single panel for ESP, as the teleport
	feature and its associated islands have been removed based on user feedback.
]]

-- SERVICES
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local StarterGui = game:GetService("StarterGui")

-- CONFIGURATION
local UI_SIZE = UDim2.new(0, 600, 0, 500) -- Increased UI size for better aesthetics
local MINIMIZED_HEIGHT = 45 -- Height of the title bar
local TAB_WIDTH = 150
local TITLE_FONT = Enum.Font.SourceSansBold
local BODY_FONT = Enum.Font.SourceSans
local FONT_COLOR = Color3.fromRGB(220, 220, 220)
local FROSTED_BACKGROUND = Color3.fromRGB(25, 25, 25)
local BORDER_COLOR = Color3.fromRGB(60, 60, 60)
local SHADOW_COLOR = Color3.fromRGB(0, 0, 0)

-- TABLES
-- Storing checkbox states
local playerCheckboxState = {
	["Username ESP"] = false,
	["Distance ESP"] = false,
	["Player Tracing"] = false,
}

local npcCheckboxState = {
	["Set Home Point"] = false,
	["Boat Dealer"] = false,
}


-- FUNCTIONS
local function createUI()
	-- Create the main ScreenGui
	local ScreenGui = Instance.new("ScreenGui")
	ScreenGui.Name = "CustomMenu"
	ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Global
	ScreenGui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")
	
	-- Create the main frame
	local MainFrame = Instance.new("Frame")
	MainFrame.Name = "MainFrame"
	MainFrame.Size = UI_SIZE
	MainFrame.Position = UDim2.fromScale(0.5, 0.5)
	MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
	MainFrame.BackgroundColor3 = FROSTED_BACKGROUND
	MainFrame.BorderSizePixel = 1
	MainFrame.BorderColor3 = BORDER_COLOR
	MainFrame.Active = true -- Make it draggable
	MainFrame.Draggable = true
	MainFrame.Parent = ScreenGui

	-- UI CORNER
	local UICorner = Instance.new("UICorner")
	UICorner.CornerRadius = UDim.new(0, 12)
	UICorner.Parent = MainFrame

	-- UI PADDING
	local UIPadding = Instance.new("UIPadding")
	UIPadding.PaddingTop = UDim.new(0, 45) -- Space for the title bar
	UIPadding.PaddingLeft = UDim.new(0, 5)
	UIPadding.PaddingRight = UDim.new(0, 5)
	UIPadding.PaddingBottom = UDim.new(0, 5)
	UIPadding.Parent = MainFrame

	-- Title Bar
	local TitleBar = Instance.new("Frame")
	TitleBar.Name = "TitleBar"
	TitleBar.Size = UDim2.new(1, 0, 0, 45)
	TitleBar.Position = UDim2.new(0, 0, 0, 0)
	TitleBar.BackgroundColor3 = BORDER_COLOR
	TitleBar.BorderSizePixel = 0
	TitleBar.Parent = MainFrame
	
	local TitleLabel = Instance.new("TextLabel")
	TitleLabel.Name = "TitleLabel"
	TitleLabel.Text = "Roblox UI - Enhanced"
	TitleLabel.Size = UDim2.new(1, -50, 1, 0) -- Adjusted size to make space for minimize button
	TitleLabel.Position = UDim2.new(0, 5, 0, 0)
	TitleLabel.BackgroundTransparency = 1
	TitleLabel.Font = TITLE_FONT
	TitleLabel.TextColor3 = FONT_COLOR
	TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
	TitleLabel.TextScaled = true
	TitleLabel.Parent = TitleBar
	TitleLabel.TextSize = 24

	-- Minimize Button
	local MinimizeButton = Instance.new("TextButton")
	MinimizeButton.Name = "MinimizeButton"
	MinimizeButton.Text = "─"
	MinimizeButton.Size = UDim2.new(0, 30, 1, 0)
	MinimizeButton.Position = UDim2.new(1, -35, 0, 0)
	MinimizeButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
	MinimizeButton.Font = TITLE_FONT
	MinimizeButton.TextColor3 = FONT_COLOR
	MinimizeButton.TextScaled = true
	MinimizeButton.Parent = TitleBar
	MinimizeButton.TextSize = 24
	
	local MinimizeUICorner = Instance.new("UICorner")
	MinimizeUICorner.CornerRadius = UDim.new(0, 6)
	MinimizeUICorner.Parent = MinimizeButton
	
	-- Add a drop shadow to the button
	local MinimizeDropShadow = Instance.new("UIStroke")
	MinimizeDropShadow.Color = SHADOW_COLOR
	MinimizeDropShadow.Transparency = 0.5
	MinimizeDropShadow.Thickness = 2
	MinimizeDropShadow.Parent = MinimizeButton

	local isMinimized = false
	MinimizeButton.MouseButton1Click:Connect(function()
		isMinimized = not isMinimized
		if isMinimized then
			MinimizeButton.Text = "□"
			MainFrame:TweenSize(UDim2.new(UI_SIZE.X.Scale, UI_SIZE.X.Offset, 0, MINIMIZED_HEIGHT), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true)
			wait(0.2)
			MainFrame.Draggable = false
		else
			MinimizeButton.Text = "─"
			MainFrame:TweenSize(UI_SIZE, Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true)
			wait(0.2)
			MainFrame.Draggable = true
		end
	end)

	-- Main Content Frame
	local MainContent = Instance.new("Frame")
	MainContent.Name = "MainContent"
	MainContent.Size = UDim2.new(1, 0, 1, -45)
	MainContent.Position = UDim2.new(0, 0, 0, 45)
	MainContent.BackgroundTransparency = 1
	MainContent.Parent = MainFrame

	-- Tab Buttons Container
	local TabButtonsContainer = Instance.new("Frame")
	TabButtonsContainer.Name = "TabButtonsContainer"
	TabButtonsContainer.Size = UDim2.new(0, TAB_WIDTH, 1, 0)
	TabButtonsContainer.BackgroundTransparency = 1
	TabButtonsContainer.Parent = MainContent

	-- Tabs Layout
	local UILayout = Instance.new("UIListLayout")
	UILayout.Name = "TabsLayout"
	UILayout.FillDirection = Enum.FillDirection.Vertical
	UILayout.HorizontalAlignment = Enum.HorizontalAlignment.Left
	UILayout.VerticalAlignment = Enum.VerticalAlignment.Top
	UILayout.Padding = UDim.new(0, 5)
	UILayout.Parent = TabButtonsContainer

	-- Panel Container (holds the active panel)
	local PanelContainer = Instance.new("Frame")
	PanelContainer.Name = "PanelContainer"
	PanelContainer.Size = UDim2.new(1, -TAB_WIDTH, 1, 0)
	PanelContainer.Position = UDim2.new(0, TAB_WIDTH, 0, 0)
	PanelContainer.BackgroundTransparency = 1
	PanelContainer.Parent = MainContent

	local activePanel = nil
	local activeTab = nil
	local activeTabName = ""
	
	local function switchTab(tabButton, panel, tabName)
		if activeTab then
			activeTab.BackgroundColor3 = BORDER_COLOR
		end
		tabButton.BackgroundColor3 = Color3.fromRGB(90, 90, 90)
		activeTab = tabButton
		activeTabName = tabName
		
		if activePanel then
			activePanel.Visible = false
		end
		panel.Visible = true
		activePanel = panel
	end
	
	-- TAB 1: ESP Panel
	local function createEspPanel()
		local espPanel = Instance.new("Frame")
		espPanel.Name = "ESP"
		espPanel.Size = UDim2.new(1, 0, 1, 0)
		espPanel.BackgroundTransparency = 1
		espPanel.Visible = false
		espPanel.Parent = PanelContainer

		local layout = Instance.new("UIListLayout")
		layout.Name = "EspLayout"
		layout.FillDirection = Enum.FillDirection.Vertical
		layout.HorizontalAlignment = Enum.HorizontalAlignment.Left
		layout.VerticalAlignment = Enum.VerticalAlignment.Top
		layout.Padding = UDim.new(0, 10)
		layout.Parent = espPanel
		
		local function createCheckbox(name: string, group: string)
			local checkbox = Instance.new("Frame")
			checkbox.Name = name
			checkbox.Size = UDim2.new(1, 0, 0, 30)
			checkbox.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
			checkbox.Parent = espPanel

			local label = Instance.new("TextLabel")
			label.Name = "Label"
			label.Size = UDim2.new(1, -35, 1, 0)
			label.Text = name
			label.BackgroundTransparency = 1
			label.Font = BODY_FONT
			label.TextColor3 = FONT_COLOR
			label.TextXAlignment = Enum.TextXAlignment.Left
			label.TextScaled = true
			label.Parent = checkbox
			label.TextSize = 24

			local box = Instance.new("TextButton")
			box.Name = "Box"
			box.Size = UDim2.new(0, 20, 0, 20)
			box.Position = UDim2.new(1, -25, 0.5, 0)
			box.AnchorPoint = Vector2.new(1, 0.5)
			box.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
			box.BorderSizePixel = 1
			box.BorderColor3 = BORDER_COLOR
			box.Parent = checkbox
			
			local boxUICorner = Instance.new("UICorner")
			boxUICorner.CornerRadius = UDim.new(0, 4)
			boxUICorner.Parent = box
			
			local checkmark = Instance.new("TextLabel")
			checkmark.Name = "Checkmark"
			checkmark.Size = UDim2.new(1, 0, 1, 0)
			checkmark.BackgroundTransparency = 1
			checkmark.Text = "✔"
			checkmark.Font = BODY_FONT
			checkmark.TextColor3 = FONT_COLOR
			checkmark.TextScaled = true
			checkmark.Visible = false
			checkmark.Parent = box
			
			box.MouseButton1Click:Connect(function()
				local state = if group == "player" then playerCheckboxState else npcCheckboxState
				state[name] = not state[name]
				checkmark.Visible = state[name]
				print(string.format("%s state: %s", name, tostring(state[name])))
			end)

			return checkbox
		end

		createCheckbox("Username ESP", "player")
		createCheckbox("Distance ESP", "player")
		createCheckbox("Player Tracing", "player")
		createCheckbox("Set Home Point", "npc")
		createCheckbox("Boat Dealer", "npc")
		
		return espPanel
	end

	-- Create the only tab and its panel
	local espPanel = createEspPanel()
	
	-- Tab Button creation
	local function createTabButton(name, panel)
		local tabButton = Instance.new("TextButton")
		tabButton.Name = name .. "Tab"
		tabButton.Size = UDim2.new(1, 0, 0, 40)
		tabButton.Text = name
		tabButton.BackgroundColor3 = BORDER_COLOR
		tabButton.BorderSizePixel = 1
		tabButton.BorderColor3 = BORDER_COLOR
		tabButton.Font = BODY_FONT
		tabButton.TextColor3 = FONT_COLOR
		tabButton.TextScaled = true
		tabButton.Parent = TabButtonsContainer

		local tabUICorner = Instance.new("UICorner")
		tabUICorner.CornerRadius = UDim.new(0, 8)
		tabUICorner.Parent = tabButton
		
		tabButton.MouseButton1Click:Connect(function()
			switchTab(tabButton, panel, name)
		end)
		return tabButton
	end

	local espTab = createTabButton("ESP", espPanel)

	-- Initially show the ESP tab
	switchTab(espTab, espPanel, "ESP")
end

-- Call the main function to start everything
createUI()

-- ESP and Tracing logic
local player = Players.LocalPlayer
local playerLabels = {}
local playerTracers = {}
local npcLabels = {}
local activeTabName = "ESP" -- Initialize with the active tab name

local RunService = game:GetService("RunService")

local function createPlayerLabel()
	local newLabel = Instance.new("BillboardGui")
	newLabel.Name = "PlayerLabel"
	newLabel.AlwaysOnTop = true
	newLabel.ExtentsOffsetWorldSpace = Vector3.new(0, 5, 0)
	newLabel.Size = UDim2.new(0, 150, 0, 50)
	newLabel.StudsOffset = Vector3.new(0, 4, 0)
	newLabel.Parent = Workspace.CurrentCamera
	
	local labelFrame = Instance.new("Frame")
	labelFrame.Size = UDim2.new(1, 0, 1, 0)
	labelFrame.BackgroundTransparency = 0.5
	labelFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	labelFrame.Parent = newLabel
	
	local label = Instance.new("TextLabel")
	label.Size = UDim2.new(1, 0, 1, 0)
	label.BackgroundTransparency = 1
	label.Font = Enum.Font.SourceSansBold
	label.TextScaled = true
	label.TextColor3 = Color3.fromRGB(255, 255, 255)
	label.TextStrokeTransparency = 0
	label.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
	label.Parent = labelFrame

	return newLabel
end

local function createPlayerTracer()
	local newTracer = Instance.new("Part")
	newTracer.Name = "PlayerTracer"
	newTracer.Anchored = true
	newTracer.CanCollide = false
	newTracer.Color = Color3.fromRGB(255, 0, 0)
	newTracer.TopSurface = Enum.SurfaceType.Smooth
	newTracer.BottomSurface = Enum.SurfaceType.Smooth
	newTracer.Parent = Workspace
	return newTracer
end

local function updatePlayerLabels()
	for _, p in pairs(Players:GetPlayers()) do
		if p ~= player then
			local label = playerLabels[p]
			local character = p.Character
			if character and character.Parent and character:FindFirstChild("HumanoidRootPart") then
				local hrp = character.HumanoidRootPart
				label.Adornee = hrp
				label.Visible = true
				
				local myRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
				if not myRootPart then continue end
				local distance = (myRootPart.Position - hrp.Position).Magnitude
				
				local text = p.Name
				if playerCheckboxState["Distance ESP"] then
					text = string.format("%s (%.1f)", p.Name, distance)
				end
				
				if playerCheckboxState["Username ESP"] then
					if not playerCheckboxState["Distance ESP"] then
						label.Parent.TextLabel.Text = p.Name
					else
						label.Parent.TextLabel.Text = string.format("%s (%.1f)", p.Name, distance)
					end
				else
					label.Parent.TextLabel.Text = "" -- Clear text if not active
				end
				
				if playerCheckboxState["Distance ESP"] then
					label.Parent.TextLabel.Text = string.format("(%.1f)", distance)
				end
				
			else
				label.Visible = false
			end
		end
	end
end

local function updatePlayerTracers()
	for _, p in pairs(Players:GetPlayers()) do
		if p ~= player then
			local tracer = playerTracers[p]
			local character = p.Character
			local myRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
			
			if character and character.Parent and character:FindFirstChild("HumanoidRootPart") and myRootPart then
				local hrp = character.HumanoidRootPart
				local startPos = myRootPart.Position
				local endPos = hrp.Position
				
				local dist = (startPos - endPos).Magnitude
				tracer.Size = Vector3.new(0.2, 0.2, dist)
				tracer.CFrame = CFrame.new(startPos, endPos) * CFrame.new(0, 0, -dist / 2)
				tracer.Transparency = 0
			else
				tracer.Transparency = 1
			end
		end
	end
end

local function updateNpcLabels()
	for _, npc in pairs(Workspace:GetChildren()) do
		if npc:IsA("Model") and npc:FindFirstChild("HumanoidRootPart") and npc:FindFirstChild("Humanoid") then
			local label = npcLabels[npc]
			if not label then continue end

			local myRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
			if not myRootPart then continue end

			label.Adornee = npc.HumanoidRootPart
			label.Visible = true
			
			local text = ""
			if npcCheckboxState["Set Home Point"] and npc.Name == "Boat Dealer" then
				text = "Set Home Point"
			elseif npcCheckboxState["Boat Dealer"] and npc.Name == "Boat Dealer" then
				text = "Boat Dealer"
			end

			label.Parent.TextLabel.Text = text
		end
	end
end

-- Initialize labels for players already in the game
local function createPlayerLabelsForExistingPlayers()
	for _, p in pairs(Players:GetPlayers()) do
		if p ~= player then
			playerLabels[p] = createPlayerLabel()
			playerTracers[p] = createPlayerTracer()
		end
	end
end

Players.PlayerAdded:Connect(function(p)
	if p ~= player then
		playerLabels[p] = createPlayerLabel()
		playerTracers[p] = createPlayerTracer()
	end
end)
Players.PlayerRemoving:Connect(function(p)
	local label = playerLabels[p]
	if label then label:Destroy() playerLabels[p] = nil end
	local tracer = playerTracers[p]
	if tracer then tracer:Destroy() playerTracers[p] = nil end
end)

createPlayerLabelsForExistingPlayers()

-- Create NPC labels
local function createNpcLabelsForExistingNpcs()
	for _, npc in pairs(Workspace:GetChildren()) do
		if npc:IsA("Model") and npc:FindFirstChild("HumanoidRootPart") and npc:FindFirstChild("Humanoid") then
			npcLabels[npc] = createPlayerLabel() -- Re-using the same function, it just creates a billboard gui
		end
	end
end

createNpcLabelsForExistingNpcs()

RunService.RenderStepped:Connect(function()
	myRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
	if not myRootPart then return end
	local isPlayerLabelEspActive = playerCheckboxState["Username ESP"] or playerCheckboxState["Distance ESP"]
	local isTracingActive = playerCheckboxState["Player Tracing"]
	if isPlayerLabelEspActive then updatePlayerLabels() else for _, label in pairs(playerLabels) do label.Visible = false end end
	if isTracingActive then updatePlayerTracers() else for _, tracer in pairs(playerTracers) do tracer.Transparency = 1 end end
	if activeTabName == "ESP" and (npcCheckboxState["Set Home Point"] or npcCheckboxState["Boat Dealer"]) then updateNpcLabels() else for _, label in pairs(npcLabels) do label.Visible = false end end
end)

-- The old nukeButton function, now it does nothing
nukeButton.MouseButton1Click:Connect(function()
	removeAllPlayerLabels()
	removeAllPlayerTracers()
end)
