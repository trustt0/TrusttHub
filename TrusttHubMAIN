--!strict
--[[
	A LocalScript to create a single, modern, enhanced, and dynamic UI menu.
	This script is designed to be placed in StarterPlayerScripts.
	
	This version includes the full UI, with a two-panel tabbed layout and a corrected
	minimization feature. The "Tween to Fruits" button now has a question mark (?)
	that displays a tooltip when the mouse hovers over it.
]]

-- SERVICES
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local StarterGui = game:GetService("StarterGui")

-- CONFIGURATION
local UI_SIZE = UDim2.new(0, 600, 0, 500) -- Increased UI size for better aesthetics
local MINIMIZED_HEIGHT = 45 -- Height of the title bar
local TAB_WIDTH = 150
local TITLE_FONT = Enum.Font.SourceSansBold
local BODY_FONT = Enum.Font.SourceSans
local FONT_COLOR = Color3.fromRGB(220, 220, 220)
local FROSTED_BACKGROUND = Color3.fromRGB(25, 25, 25)
local BORDER_COLOR = Color3.fromRGB(60, 60, 60)
local SHADOW_COLOR = Color3.fromRGB(0, 0, 0)
local ACCENT_COLOR = Color3.fromRGB(170, 85, 255) -- Vibrant purple accent

-- Tab-specific colors for visual separation
local BOSS_ACCENT = Color3.fromRGB(255, 85, 85) -- Red
local ESP_ACCENT = Color3.fromRGB(85, 255, 85) -- Green
local FARM_ACCENT = Color3.fromRGB(85, 255, 255) -- Cyan
local FRUIT_ACCENT = Color3.fromRGB(255, 170, 0) -- Orange
local TELEPORT_ACCENT = Color3.fromRGB(150, 150, 255) -- New accent color for Teleport tab

local NPC_ESP_DISTANCE = 500
local TRACER_COLOR = Color3.fromRGB(255, 170, 0)
local TRACER_THICKNESS = 0.2
local TRACER_TRANSPARENCY = 0.2
local TWEEN_SPEED = 100
local ESP_VERTICAL_OFFSET = 20 -- Adjusted vertical offset for ESP labels for better visibility

-- Get the player's PlayerGui to store the UI
local player = Players.LocalPlayer
local PlayerGui = player:WaitForChild("PlayerGui")

-- Create a container for the tracers
local TracerContainer = Instance.new("Folder")
TracerContainer.Name = "TracerContainer"
TracerContainer.Parent = Workspace

-- Main ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "UnifiedMenu"
screenGui.ResetOnSpawn = false
screenGui.Parent = PlayerGui

-- =================================================================
-- === UI Utility Functions ========================================
-- =================================================================

-- Creates a main container frame with a modern, frosted glass look
local function createMainFrame(size: UDim2, position: UDim2, parent: Instance)
	local frame = Instance.new("Frame")
	frame.Name = "MainFrame"
	frame.Size = size
	frame.Position = position
	frame.AnchorPoint = Vector2.new(0.5, 0.5)
	frame.BackgroundColor3 = FROSTED_BACKGROUND
	frame.BackgroundTransparency = 0.2
	frame.BorderSizePixel = 0
	frame.Parent = parent

	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, 15)
	corner.Parent = frame

	local stroke = Instance.new("UIStroke")
	stroke.Color = BORDER_COLOR
	stroke.Thickness = 1.5
	stroke.Transparency = 0.5
	stroke.Parent = frame

	local shadow = Instance.new("UIStroke")
	shadow.Name = "ShadowStroke"
	shadow.Color = SHADOW_COLOR
	shadow.Thickness = 3
	shadow.Transparency = 0.6
	shadow.Parent = frame

	return frame
end

-- Creates the draggable title bar with an accent gradient
local function createTitleBar(parent: Instance, title: string)
	local titleBar = Instance.new("Frame")
	titleBar.Name = "TitleBar"
	titleBar.Size = UDim2.new(1, 0, 0, MINIMIZED_HEIGHT)
	titleBar.BackgroundTransparency = 1
	titleBar.BorderSizePixel = 0
	titleBar.Parent = parent

	local gradient = Instance.new("UIGradient")
	gradient.Color = ColorSequence.new(ACCENT_COLOR, ACCENT_COLOR:Lerp(Color3.new(0,0,0), 0.5))
	gradient.Rotation = 90
	gradient.Parent = titleBar

	local titleLabel = Instance.new("TextLabel")
	titleLabel.Name = "TitleLabel"
	titleLabel.Size = UDim2.new(1, -120, 1, 0)
	titleLabel.Position = UDim2.new(0, 15, 0, 0)
	titleLabel.BackgroundTransparency = 1
	titleLabel.TextColor3 = FONT_COLOR
	titleLabel.TextScaled = true
	titleLabel.Font = TITLE_FONT
	titleLabel.Text = title
	titleLabel.TextXAlignment = Enum.TextXAlignment.Left
	titleLabel.TextYAlignment = Enum.TextYAlignment.Center
	titleLabel.Parent = titleBar

	-- Minimize button
	local minimizeButton = Instance.new("TextButton")
	minimizeButton.Name = "MinimizeButton"
	minimizeButton.Size = UDim2.new(0, 30, 0, 30)
	minimizeButton.Position = UDim2.new(1, -75, 0.5, -15)
	minimizeButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	minimizeButton.BorderSizePixel = 0
	minimizeButton.Text = "-"
	minimizeButton.TextColor3 = FONT_COLOR
	minimizeButton.TextSize = 25
	minimizeButton.Font = TITLE_FONT
	minimizeButton.Parent = titleBar
	
	local minCorner = Instance.new("UICorner")
	minCorner.CornerRadius = UDim.new(0, 8)
	minCorner.Parent = minimizeButton

	-- Nuke button
	local nukeButton = Instance.new("TextButton")
	nukeButton.Name = "NukeButton"
	nukeButton.Size = UDim2.new(0, 30, 0, 30)
	nukeButton.Position = UDim2.new(1, -40, 0.5, -15)
	nukeButton.BackgroundColor3 = BOSS_ACCENT:Lerp(Color3.new(0,0,0), 0.5)
	nukeButton.BorderSizePixel = 0
	nukeButton.Text = "X"
	nukeButton.TextColor3 = FONT_COLOR
	nukeButton.TextSize = 20
	nukeButton.Font = TITLE_FONT
	nukeButton.Parent = titleBar
	
	local nukeCorner = Instance.new("UICorner")
	nukeCorner.CornerRadius = UDim.new(0, 8)
	nukeCorner.Parent = nukeButton
	
	-- Hover effects for buttons
	minimizeButton.MouseEnter:Connect(function() TweenService:Create(minimizeButton, TweenInfo.new(0.2), {BackgroundColor3 = ACCENT_COLOR}):Play() end)
	minimizeButton.MouseLeave:Connect(function() TweenService:Create(minimizeButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(50, 50, 50)}):Play() end)
	nukeButton.MouseEnter:Connect(function() TweenService:Create(nukeButton, TweenInfo.new(0.2), {BackgroundColor3 = BOSS_ACCENT}):Play() end)
	nukeButton.MouseLeave:Connect(function() TweenService:Create(nukeButton, TweenInfo.new(0.2), {BackgroundColor3 = BOSS_ACCENT:Lerp(Color3.new(0,0,0), 0.5)}):Play() end)

	return titleBar, minimizeButton, nukeButton
end

-- Creates a sleek tab button
local function createTabButton(parent: Instance, name: string, accentColor: Color3, layoutOrder: number)
	local button = Instance.new("TextButton")
	button.Name = name .. "Tab"
	button.LayoutOrder = layoutOrder
	button.Size = UDim2.new(1, -10, 0, 50)
	button.BackgroundColor3 = FROSTED_BACKGROUND:Lerp(Color3.new(1,1,1), 0.1)
	button.BackgroundTransparency = 0.5
	button.BorderSizePixel = 0
	button.TextColor3 = FONT_COLOR
	button.Text = name
	button.TextScaled = true
	button.Font = TITLE_FONT
	button.Parent = parent

	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, 8)
	corner.Parent = button

	-- Hover effects
	button.MouseEnter:Connect(function() TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = FROSTED_BACKGROUND:Lerp(Color3.new(1,1,1), 0.25)}):Play() end)
	button.MouseLeave:Connect(function() TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = FROSTED_BACKGROUND:Lerp(Color3.new(1,1,1), 0.1)}):Play() end)
	
	return button
end

-- Creates a toggle button with a clean checkbox style
local function createToggleButton(parent: Instance, text: string, accentColor: Color3, initialActiveState: boolean, layoutOrder: number)
	local container = Instance.new("Frame")
	container.Name = "ToggleContainer"
	container.LayoutOrder = layoutOrder
	container.Size = UDim2.new(1, -20, 0, 45)
	container.BackgroundColor3 = FROSTED_BACKGROUND
	container.BackgroundTransparency = 0.4
	container.BorderSizePixel = 0
	container.Parent = parent

	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, 8)
	corner.Parent = container

	local button = Instance.new("TextButton")
	button.Name = "ToggleButton"
	button.Size = UDim2.new(1, 0, 1, 0)
	button.BackgroundTransparency = 1
	button.Text = ""
	button.Parent = container

	local toggleBox = Instance.new("Frame")
	toggleBox.Name = "ToggleBox"
	toggleBox.Size = UDim2.new(0, 20, 0, 20)
	toggleBox.Position = UDim2.new(0, 10, 0.5, -10)
	toggleBox.BackgroundColor3 = if initialActiveState then accentColor else Color3.fromRGB(80, 80, 80)
	toggleBox.BorderSizePixel = 1
	toggleBox.BorderColor3 = BORDER_COLOR
	toggleBox.Parent = button

	local boxCorner = Instance.new("UICorner")
	boxCorner.CornerRadius = UDim.new(0, 5)
	boxCorner.Parent = toggleBox

	local checkmark = Instance.new("ImageLabel")
	checkmark.Name = "Checkmark"
	checkmark.BackgroundTransparency = 1
	checkmark.Size = UDim2.new(1, 0, 1, 0)
	checkmark.Image = "rbxassetid://603417770" -- Checkmark image
	checkmark.ImageColor3 = FONT_COLOR
	checkmark.Visible = initialActiveState
	checkmark.Parent = toggleBox

	local label = Instance.new("TextLabel")
	label.Name = "Label"
	label.Size = UDim2.new(1, -40, 1, 0)
	label.Position = UDim2.new(0, 35, 0, 0)
	label.BackgroundTransparency = 1
	label.TextColor3 = FONT_COLOR
	label.Text = text
	label.TextScaled = true
	label.Font = BODY_FONT
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.Parent = button
	
	-- Hover effect
	container.MouseEnter:Connect(function() TweenService:Create(container, TweenInfo.new(0.2), {BackgroundTransparency = 0.25}):Play() end)
	container.MouseLeave:Connect(function() TweenService:Create(container, TweenInfo.new(0.2), {BackgroundTransparency = 0.4}):Play() end)

	return container, button, checkmark, toggleBox
end

-- Create a dropdown menu
local function createDropdown(parent: Instance, name: string, items: {string}, layoutOrder: number)
	local container = Instance.new("Frame")
	container.Name = name .. "Container"
	container.LayoutOrder = layoutOrder
	container.Size = UDim2.new(1, -20, 0, 45)
	container.BackgroundColor3 = FROSTED_BACKGROUND:Lerp(Color3.new(1,1,1), 0.1)
	container.BackgroundTransparency = 0.5
	container.BorderSizePixel = 0
	container.Parent = parent

	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, 8)
	corner.Parent = container

	local dropdownButton = Instance.new("TextButton")
	dropdownButton.Name = "DropdownButton"
	dropdownButton.Size = UDim2.new(1, 0, 1, 0)
	dropdownButton.BackgroundTransparency = 1
	dropdownButton.Text = items[1]
	dropdownButton.TextColor3 = FONT_COLOR
	dropdownButton.TextScaled = true
	dropdownButton.Font = BODY_FONT
	dropdownButton.TextXAlignment = Enum.TextXAlignment.Left
	dropdownButton.TextLabel.TextXAlignment = Enum.TextXAlignment.Left
	dropdownButton.Parent = container

	local arrow = Instance.new("TextLabel")
	arrow.Name = "Arrow"
	arrow.Size = UDim2.new(0, 20, 1, 0)
	arrow.Position = UDim2.new(1, -25, 0, 0)
	arrow.BackgroundTransparency = 1
	arrow.Text = "▼"
	arrow.TextColor3 = FONT_COLOR
	arrow.TextScaled = true
	arrow.Font = BODY_FONT
	arrow.TextXAlignment = Enum.TextXAlignment.Right
	arrow.Parent = dropdownButton

	local dropdownList = Instance.new("Frame")
	dropdownList.Name = "DropdownList"
	dropdownList.Size = UDim2.new(1, 0, 0, 0)
	dropdownList.Position = UDim2.new(0, 0, 1, 5)
	dropdownList.ZIndex = 2
	dropdownList.BackgroundColor3 = FROSTED_BACKGROUND
	dropdownList.BackgroundTransparency = 0
	dropdownList.BorderSizePixel = 0
	dropdownList.Visible = false
	dropdownList.Parent = parent

	local listCorner = Instance.new("UICorner")
	listCorner.CornerRadius = UDim.new(0, 8)
	listCorner.Parent = dropdownList

	local listLayout = Instance.new("UIListLayout")
	listLayout.Padding = UDim.new(0, 5)
	listLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
	listLayout.SortOrder = Enum.SortOrder.LayoutOrder
	listLayout.Parent = dropdownList

	for _, item in items do
		local itemButton = Instance.new("TextButton")
		itemButton.Name = item .. "Item"
		itemButton.Size = UDim2.new(1, -10, 0, 30)
		itemButton.BackgroundColor3 = FROSTED_BACKGROUND:Lerp(Color3.new(1,1,1), 0.1)
		itemButton.BackgroundTransparency = 0.5
		itemButton.BorderSizePixel = 0
		itemButton.TextColor3 = FONT_COLOR
		itemButton.Text = item
		itemButton.TextScaled = true
		itemButton.Font = BODY_FONT
		itemButton.Parent = dropdownList

		itemButton.MouseButton1Click:Connect(function()
			dropdownButton.Text = item
			dropdownList.Visible = false
			local newSize = UDim2.new(container.Size.X.Scale, container.Size.X.Offset, 0, container.Size.Y.Offset)
			TweenService:Create(container.Parent, TweenInfo.new(0.2), {Size = newSize}):Play()
		end)
	end
	
	local isOpen = false
	dropdownButton.MouseButton1Click:Connect(function()
		isOpen = not isOpen
		local newHeight = isOpen and #items * 35 or 0
		dropdownList.Visible = isOpen
		local targetSize = UDim2.new(1, 0, 0, newHeight)
		TweenService:Create(dropdownList, TweenInfo.new(0.2), {Size = targetSize}):Play()
	end)

	return container, dropdownButton
end


-- =================================================================
-- === UI Construction and Logic ===================================
-- =================================================================

-- DRAGGING FUNCTIONALITY
local isDragging = false
local dragStartPos = Vector2.new(0, 0)
local dragStartFramePosition = UDim2.new(0, 0, 0, 0)
local activeFrame = nil
local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

local function setupDrag(frame: Frame, titleBar: Frame)
	titleBar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			isDragging = true
			dragStartPos = input.Position
			dragStartFramePosition = frame.Position
			activeFrame = frame
			UserInputService.MouseIconEnabled = false
		end
	end)
end

UserInputService.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		isDragging = false
		activeFrame = nil
		UserInputService.MouseIconEnabled = true
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if isDragging and activeFrame and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
		local delta = input.Position - dragStartPos
		local newPosition = dragStartFramePosition + UDim2.new(0, delta.X, 0, delta.Y)
		activeFrame.Position = newPosition
	end
end)

-- Create the main UI elements
local mainFrame = createMainFrame(UI_SIZE, UDim2.new(0.5, 0, 0.5, 0), screenGui)
local titleBar, minimizeButton, nukeButton = createTitleBar(mainFrame, "Enhanced Menu")
setupDrag(mainFrame, titleBar)

local contentFrame = Instance.new("Frame")
contentFrame.Name = "ContentFrame"
contentFrame.Size = UDim2.new(1, 0, 1, -MINIMIZED_HEIGHT)
contentFrame.Position = UDim2.new(0, 0, 0, MINIMIZED_HEIGHT)
contentFrame.BackgroundTransparency = 1
contentFrame.Parent = mainFrame

local contentListLayout = Instance.new("UIListLayout")
contentListLayout.Padding = UDim.new(0, 0)
contentListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left
contentListLayout.SortOrder = Enum.SortOrder.LayoutOrder
contentListLayout.FillDirection = Enum.FillDirection.Horizontal
contentListLayout.Parent = contentFrame

-- Tab container on the left
local tabContainer = Instance.new("Frame")
tabContainer.Name = "TabContainer"
tabContainer.Size = UDim2.new(0, TAB_WIDTH, 1, 0)
tabContainer.BackgroundTransparency = 0.8
tabContainer.BackgroundColor3 = FROSTED_BACKGROUND
tabContainer.Parent = contentFrame

local tabListLayout = Instance.new("UIListLayout")
tabListLayout.Padding = UDim.new(0, 5)
tabListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
tabListLayout.SortOrder = Enum.SortOrder.LayoutOrder
tabListLayout.Parent = tabContainer

local tabPadding = Instance.new("UIPadding")
tabPadding.PaddingTop = UDim.new(0, 10)
tabPadding.PaddingBottom = UDim.new(0, 10)
tabPadding.Parent = tabContainer

-- Tab content container on the right
local tabContentParent = Instance.new("Frame")
tabContentParent.Name = "TabContentParent"
tabContentParent.Size = UDim2.new(1, -TAB_WIDTH, 1, 0)
tabContentParent.Position = UDim2.new(0, TAB_WIDTH, 0, 0)
tabContentParent.BackgroundTransparency = 1
tabContentParent.Parent = contentFrame

local contentPadding = Instance.new("UIPadding")
contentPadding.PaddingTop = UDim.new(0, 10)
contentPadding.PaddingBottom = UDim.new(0, 10)
contentPadding.PaddingLeft = UDim.new(0, 15)
contentPadding.PaddingRight = UDim.new(0, 15)
contentPadding.Parent = tabContentParent

local tabContentListLayout = Instance.new("UIListLayout")
tabContentListLayout.Padding = UDim.new(0, 10)
tabContentListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
tabContentListLayout.SortOrder = Enum.SortOrder.LayoutOrder
tabContentListLayout.Parent = tabContentParent

-- Minimization logic (fixed)
local isMinimized = false
minimizeButton.MouseButton1Click:Connect(function()
	isMinimized = not isMinimized
	local targetSize = if isMinimized then UDim2.new(UI_SIZE.X.Scale, UI_SIZE.X.Offset, 0, MINIMIZED_HEIGHT) else UI_SIZE
	
	if isMinimized then
		contentFrame.Visible = false
		mainFrame.ClipsDescendants = true
	else
		contentFrame.Visible = true
		mainFrame.ClipsDescendants = false
	end

	TweenService:Create(mainFrame, tweenInfo, {Size = targetSize}):Play()
	minimizeButton.Text = if isMinimized then "+" else "-"
end)

-- Tab-specific logic
local contentFrames = {}
local tabButtons = {}
local activeTabName = nil

local function createTabAndContent(name: string, accentColor: Color3, layoutOrder: number)
	local button = createTabButton(tabContainer, name, accentColor, layoutOrder)
	local contentFrame = Instance.new("Frame")
	contentFrame.Name = name .. "Content"
	contentFrame.Size = UDim2.new(1, 0, 1, 0)
	contentFrame.BackgroundTransparency = 1
	contentFrame.Visible = false
	contentFrame.Parent = tabContentParent

	local frameLayout = Instance.new("UIListLayout")
	frameLayout.Padding = UDim.new(0, 10)
	frameLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
	frameLayout.SortOrder = Enum.SortOrder.LayoutOrder
	frameLayout.Parent = contentFrame

	button.MouseButton1Click:Connect(function()
		for _, frame in pairs(contentFrames) do frame.Visible = false end
		for _, otherButton in pairs(tabButtons) do
			TweenService:Create(otherButton, tweenInfo, {BackgroundColor3 = FROSTED_BACKGROUND:Lerp(Color3.new(1,1,1), 0.1)}):Play()
		end
		contentFrame.Visible = true
		activeTabName = name
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = accentColor, TextColor3 = FONT_COLOR}):Play()
	end)
	
	contentFrames[name] = contentFrame
	tabButtons[name] = button

	return contentFrame
end


-- Boss Status Tab
local bossContentFrame = createTabAndContent("Boss Status", BOSS_ACCENT, 1)
bossContentFrame.Visible = true
activeTabName = "Boss Status"
TweenService:Create(tabButtons["Boss Status"], tweenInfo, {BackgroundColor3 = BOSS_ACCENT, TextColor3 = FONT_COLOR}):Play()

local statusLabel = Instance.new("TextLabel")
statusLabel.Name = "StatusLabel"
statusLabel.LayoutOrder = 1
statusLabel.Size = UDim2.new(1, -20, 0, 50)
statusLabel.BackgroundTransparency = 1
statusLabel.TextColor3 = FONT_COLOR
statusLabel.TextScaled = true
statusLabel.Font = TITLE_FONT
statusLabel.Text = "Checking for bosses..."
statusLabel.TextXAlignment = Enum.TextXAlignment.Center
statusLabel.Parent = bossContentFrame
	
local enemiesFolder = Workspace:FindFirstChild("Enemies")
if not enemiesFolder then
	statusLabel.Text = "No enemies folder found!"
end
task.spawn(function()
	while task.wait(1) do
		if not screenGui.Parent then break end
		if activeTabName == "Boss Status" and enemiesFolder then
			local sawBoss = enemiesFolder:FindFirstChild("Saw")
			if sawBoss and sawBoss:IsA("Model") then
				statusLabel.Text = "Bosses spawned!"
				statusLabel.TextColor3 = BOSS_ACCENT
			else
				statusLabel.Text = "No bosses spawned"
				statusLabel.TextColor3 = FONT_COLOR
			end
		end
	end
end)

-- ESP Tab
local espContentFrame = createTabAndContent("ESP", ESP_ACCENT, 2)
local playerEspLabel = Instance.new("TextLabel")
playerEspLabel.Name = "PlayerEspLabel"
playerEspLabel.LayoutOrder = 1
playerEspLabel.Text = "Player ESP Options"
playerEspLabel.Size = UDim2.new(1, -20, 0, 25)
playerEspLabel.BackgroundTransparency = 1
playerEspLabel.TextColor3 = ESP_ACCENT
playerEspLabel.TextScaled = true
playerEspLabel.Font = TITLE_FONT
playerEspLabel.TextXAlignment = Enum.TextXAlignment.Left
playerEspLabel.Parent = espContentFrame
local playerEspTypes = {
	["Username ESP"] = false,
	["Distance ESP"] = false,
	["Player Tracing"] = false,
}
local playerCheckboxState = {
	["Username ESP"] = false,
	["Distance ESP"] = false,
	["Player Tracing"] = false
}
local playerEspLayoutOrder = 2
local function createPlayerEspCheckbox(espName)
	local container, button, checkmark, toggleBox = createToggleButton(espContentFrame, espName, ACCENT_COLOR, false, playerEspLayoutOrder)
	playerEspLayoutOrder += 1
	button.MouseButton1Click:Connect(function()
		local newState = not playerCheckboxState[espName]
		playerCheckboxState[espName] = newState
		checkmark.Visible = newState
		TweenService:Create(toggleBox, tweenInfo, {BackgroundColor3 = if newState then ACCENT_COLOR else Color3.fromRGB(80, 80, 80)}):Play()
	end)
end
for espName, _ in pairs(playerEspTypes) do
	createPlayerEspCheckbox(espName)
end
local npcEspLabel = Instance.new("TextLabel")
npcEspLabel.Name = "NpcEspLabel"
npcEspLabel.LayoutOrder = playerEspLayoutOrder
npcEspLabel.Text = "NPC ESP Options"
npcEspLabel.Size = UDim2.new(1, -20, 0, 25)
npcEspLabel.BackgroundTransparency = 1
npcEspLabel.TextColor3 = ESP_ACCENT
npcEspLabel.TextScaled = true
npcEspLabel.Font = TITLE_FONT
npcEspLabel.TextXAlignment = Enum.TextXAlignment.Left
npcEspLabel.Parent = espContentFrame
playerEspLayoutOrder += 1
local npcTypes = {
	["Set Home Point"] = false,
	["Boat Dealer"] = false,
}
local npcCheckboxState = {
	["Set Home Point"] = false,
	["Boat Dealer"] = false
}
local function createNpcEspCheckbox(npcName)
	local container, button, checkmark, toggleBox = createToggleButton(espContentFrame, npcName, ESP_ACCENT, false, playerEspLayoutOrder)
	playerEspLayoutOrder += 1
	button.MouseButton1Click:Connect(function()
		local newState = not npcCheckboxState[npcName]
		npcCheckboxState[npcName] = newState
		checkmark.Visible = newState
		TweenService:Create(toggleBox, tweenInfo, {BackgroundColor3 = if newState then ESP_ACCENT else Color3.fromRGB(80, 80, 80)}):Play()
	end)
end
for npcName, _ in pairs(npcTypes) do
	createNpcEspCheckbox(npcName)
end

-- Farm Level Tab
local farmLevelContentFrame = createTabAndContent("Farm Level", FARM_ACCENT, 3)
local farmLevelToggle, farmLevelButton, farmLevelCheckmark, farmLevelToggleBox = createToggleButton(farmLevelContentFrame, "Farm Level", FARM_ACCENT, false, 1)
local isFarmLevelActive = false
local levelStatusFrame = Instance.new("Frame")
levelStatusFrame.Name = "LevelStatusFrame"
levelStatusFrame.LayoutOrder = 2
levelStatusFrame.Size = UDim2.new(1, -20, 0, 50)
levelStatusFrame.BackgroundColor3 = FROSTED_BACKGROUND
levelStatusFrame.BackgroundTransparency = 0.5
levelStatusFrame.BorderSizePixel = 0
levelStatusFrame.ClipsDescendants = true
levelStatusFrame.Visible = false
levelStatusFrame.Parent = farmLevelContentFrame
local levelStatusCorner = Instance.new("UICorner")
levelStatusCorner.CornerRadius = UDim.new(0, 8)
levelStatusCorner.Parent = levelStatusFrame
local levelStatusLabel = Instance.new("TextLabel")
levelStatusLabel.Name = "LevelStatusLabel"
levelStatusLabel.Size = UDim2.new(1, 0, 1, 0)
levelStatusLabel.BackgroundTransparency = 1
levelStatusLabel.TextColor3 = FONT_COLOR
levelStatusLabel.Text = "Level Status"
levelStatusLabel.TextScaled = true
levelStatusLabel.Font = TITLE_FONT
levelStatusLabel.TextXAlignment = Enum.TextXAlignment.Center
levelStatusLabel.Parent = levelStatusFrame
farmLevelButton.MouseButton1Click:Connect(function()
	isFarmLevelActive = not isFarmLevelActive
	levelStatusFrame.Visible = isFarmLevelActive
end)

-- Fruit Notifier Tab
local fruitNotifierContentFrame = createTabAndContent("Fruit Notifier", FRUIT_ACCENT, 4)
local fruitNotifierToggle, fruitNotifierButton, fruitNotifierCheckmark, fruitNotifierToggleBox = createToggleButton(fruitNotifierContentFrame, "Fruit Notifier", FRUIT_ACCENT, false, 1)
local isFruitNotifierActive = false
local fruitStatusFrame = Instance.new("Frame")
fruitStatusFrame.Name = "FruitStatusFrame"
fruitStatusFrame.LayoutOrder = 2
fruitStatusFrame.Size = UDim2.new(1, -20, 0, 50)
fruitStatusFrame.BackgroundColor3 = FROSTED_BACKGROUND
fruitStatusFrame.BackgroundTransparency = 0.5
fruitStatusFrame.BorderSizePixel = 0
fruitStatusFrame.ClipsDescendants = true
fruitStatusFrame.Visible = false
fruitStatusFrame.Parent = fruitNotifierContentFrame
local fruitStatusCorner = Instance.new("UICorner")
fruitStatusCorner.CornerRadius = UDim.new(0, 8)
fruitStatusCorner.Parent = fruitStatusFrame
local fruitStatusLabel = Instance.new("TextLabel")
fruitStatusLabel.Name = "FruitStatusLabel"
fruitStatusLabel.Size = UDim2.new(1, 0, 1, 0)
fruitStatusLabel.BackgroundTransparency = 1
fruitStatusLabel.TextColor3 = FONT_COLOR
fruitStatusLabel.Text = "Fruit Status"
fruitStatusLabel.TextScaled = true
fruitStatusLabel.Font = TITLE_FONT
fruitStatusLabel.TextXAlignment = Enum.TextXAlignment.Center
fruitStatusLabel.Parent = fruitStatusFrame
fruitNotifierButton.MouseButton1Click:Connect(function()
	isFruitNotifierActive = not isFruitNotifierActive
	fruitStatusFrame.Visible = isFruitNotifierActive
end)

-- Teleport Tab
local teleportContentFrame = createTabAndContent("Teleport", TELEPORT_ACCENT, 5)

-- Dropdown to select islands
local selectedIsland = "WindMill"
local islands = {"WindMill"}
local islandDropdownContainer, islandDropdownButton = createDropdown(teleportContentFrame, "IslandDropdown", islands, 1)
islandDropdownButton.Text = "WindMill"
islandDropdownButton.MouseButton1Click:Connect(function()
	selectedIsland = islandDropdownButton.Text
end)

-- Speed slider
local speedSliderContainer = Instance.new("Frame")
speedSliderContainer.Name = "SpeedSliderContainer"
speedSliderContainer.LayoutOrder = 2
speedSliderContainer.Size = UDim2.new(1, -20, 0, 45)
speedSliderContainer.BackgroundColor3 = FROSTED_BACKGROUND
speedSliderContainer.BackgroundTransparency = 0.4
speedSliderContainer.BorderSizePixel = 0
speedSliderContainer.Parent = teleportContentFrame

local speedCorner = Instance.new("UICorner")
speedCorner.CornerRadius = UDim.new(0, 8)
speedCorner.Parent = speedSliderContainer

local speedLabel = Instance.new("TextLabel")
speedLabel.Name = "SpeedLabel"
speedLabel.Size = UDim2.new(1, -20, 0, 20)
speedLabel.Position = UDim2.new(0, 10, 0, 5)
speedLabel.BackgroundTransparency = 1
speedLabel.TextColor3 = FONT_COLOR
speedLabel.Text = "Teleport Speed: 150"
speedLabel.TextScaled = true
speedLabel.Font = BODY_FONT
speedLabel.TextXAlignment = Enum.TextXAlignment.Left
speedLabel.Parent = speedSliderContainer

local speedSlider = Instance.new("Slider")
speedSlider.Name = "SpeedSlider"
speedSlider.Size = UDim2.new(1, -20, 0, 10)
speedSlider.Position = UDim2.new(0, 10, 0, 25)
speedSlider.BackgroundTransparency = 0.5
speedSlider.BackgroundColor3 = BORDER_COLOR
speedSlider.Parent = speedSliderContainer
speedSlider.BarBackgroundColor3 = ACCENT_COLOR
speedSlider.Value = 0.5 -- Normalized value for 150 speed (min 50, max 300)

local currentTeleportSpeed = 150
speedSlider.Changed:Connect(function(property)
	if property == "Value" then
		currentTeleportSpeed = 50 + (speedSlider.Value * 250)
		speedLabel.Text = string.format("Teleport Speed: %d", math.floor(currentTeleportSpeed))
	end
end)

-- Teleport button toggle
local teleportToggleContainer, teleportToggleButton, teleportToggleCheckmark, teleportToggleBox = createToggleButton(teleportContentFrame, "Teleport to Selected Island", ACCENT_COLOR, false, 3)

local isTeleporting = false
teleportToggleButton.MouseButton1Click:Connect(function()
	isTeleporting = not isTeleporting
	teleportToggleCheckmark.Visible = isTeleporting
	TweenService:Create(teleportToggleBox, tweenInfo, {BackgroundColor3 = if isTeleporting then ACCENT_COLOR else Color3.fromRGB(80, 80, 80)}):Play()
end)

-- TWEENING LOGIC
local function teleportPlayer(destination: Vector3, speed: number)
	local character = player.Character
	if not character then return end
	local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
	if not humanoidRootPart then return end

	local tweenInfo = TweenInfo.new(100 / speed, Enum.EasingStyle.Quart, Enum.EasingDirection.Out)
	local tween = TweenService:Create(humanoidRootPart, tweenInfo, {CFrame = CFrame.new(destination)})
	tween:Play()
end

RunService.RenderStepped:Connect(function()
	if isTeleporting then
		if selectedIsland == "WindMill" then
			local windmill = Workspace:FindFirstChild("Map") and Workspace.Map:FindFirstChild("WindMill")
			if windmill and windmill:IsA("Model") then
				local destination = windmill.PrimaryPart.Position + Vector3.new(0, 10, 0)
				teleportPlayer(destination, currentTeleportSpeed)
			end
		end
	end
end)


-- =================================================================
-- === ESP and other logic =========================================
-- =================================================================

local playerLabels = {}
local playerTracers = {}
local npcLabels = {}
local nukeButton = mainFrame.TitleBar:FindFirstChild("NukeButton")
local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

local function createPlayerLabel()
	local newLabel = Instance.new("BillboardGui")
	newLabel.Name = "PlayerLabel"
	newLabel.Size = UDim2.new(0, 200, 0, 50)
	newLabel.StudsOffset = Vector3.new(0, ESP_VERTICAL_OFFSET, 0)
	newLabel.AlwaysOnTop = true
	newLabel.Parent = Workspace

	local textLabel = Instance.new("TextLabel")
	textLabel.Name = "TextLabel"
	textLabel.Size = UDim2.new(1, 0, 1, 0)
	textLabel.BackgroundTransparency = 1
	textLabel.TextColor3 = FONT_COLOR
	textLabel.TextScaled = true
	textLabel.Font = BODY_FONT
	textLabel.Parent = newLabel

	return newLabel
end

local function createPlayerTracer()
	local tracerPart = Instance.new("Part")
	tracerPart.Name = "PlayerTracer"
	tracerPart.Size = Vector3.new(TRACER_THICKNESS, 1, TRACER_THICKNESS)
	tracerPart.Anchored = true
	tracerPart.CanCollide = false
	tracerPart.Color = TRACER_COLOR
	tracerPart.Transparency = TRACER_TRANSPARENCY
	tracerPart.Parent = TracerContainer
	
	return tracerPart
end

local function createNpcLabel(npc: Instance)
	local newLabel = Instance.new("BillboardGui")
	newLabel.Name = "NpcLabel"
	newLabel.Size = UDim2.new(0, 200, 0, 50)
	newLabel.StudsOffset = Vector3.new(0, ESP_VERTICAL_OFFSET, 0)
	newLabel.AlwaysOnTop = true
	newLabel.Parent = npc.PrimaryPart
	
	local textLabel = Instance.new("TextLabel")
	textLabel.Name = "TextLabel"
	textLabel.Size = UDim2.new(1, 0, 1, 0)
	textLabel.BackgroundTransparency = 1
	textLabel.TextColor3 = ESP_ACCENT
	textLabel.TextScaled = true
	textLabel.Font = BODY_FONT
	textLabel.Parent = newLabel

	npcLabels[npc] = newLabel
	return newLabel
end

local function updatePlayerLabels()
	for _, p in pairs(Players:GetPlayers()) do
		if p ~= player then
			local label = playerLabels[p]
			if not label then
				label = createPlayerLabel()
				playerLabels[p] = label
			end
			local root = p.Character and p.Character:FindFirstChild("HumanoidRootPart")
			if root then
				label.Adornee = root
				local dist = (player.Character.HumanoidRootPart.Position - root.Position).Magnitude
				local text = ""
				if playerCheckboxState["Username ESP"] then
					text ..= p.Name .. "\n"
				end
				if playerCheckboxState["Distance ESP"] then
					text ..= math.floor(dist) .. " studs"
				end
				label.TextLabel.Text = text
				label.Visible = true
			else
				label.Visible = false
			end
		end
	end
end

local function updatePlayerTracers()
	local myRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
	if not myRootPart then return end
	
	for _, p in pairs(Players:GetPlayers()) do
		if p ~= player then
			local tracer = playerTracers[p]
			if not tracer then
				tracer = createPlayerTracer()
				playerTracers[p] = tracer
			end
			local root = p.Character and p.Character:FindFirstChild("HumanoidRootPart")
			if root then
				local startPos = myRootPart.Position
				local endPos = root.Position
				
				tracer.Size = Vector3.new(TRACER_THICKNESS, (endPos - startPos).Magnitude, TRACER_THICKNESS)
				tracer.CFrame = CFrame.new(startPos:Lerp(endPos, 0.5), endPos)
				tracer.Transparency = 0
			else
				tracer.Transparency = 1
			end
		end
	end
end

local function updateNpcLabels()
	local myRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
	if not myRootPart then return end
	
	local npcs = {}
	if playerCheckboxState["Set Home Point"] then
		for _, child in pairs(Workspace:GetChildren()) do
			if child.Name == "Home" and child:IsA("BasePart") then
				table.insert(npcs, child)
			end
		end
	end
	
	if playerCheckboxState["Boat Dealer"] then
		local npc = Workspace:FindFirstChild("BoatDealer")
		if npc and npc:IsA("Model") and npc:FindFirstChild("HumanoidRootPart") then
			table.insert(npcs, npc.HumanoidRootPart)
		end
	end

	for _, npc in pairs(npcs) do
		local label = npcLabels[npc]
		if not label then
			label = createNpcLabel(npc)
			npcLabels[npc] = label
		end
		local dist = (myRootPart.Position - npc.Position).Magnitude
		if dist <= NPC_ESP_DISTANCE then
			label.Visible = true
			local text = ""
			if playerCheckboxState["Set Home Point"] and npc.Name == "Home" then
				text = "Home Point\n" .. math.floor(dist) .. " studs"
			elseif playerCheckboxState["Boat Dealer"] and npc.Parent.Name == "BoatDealer" then
				text = "Boat Dealer\n" .. math.floor(dist) .. " studs"
			end
			label.TextLabel.Text = text
		else
			label.Visible = false
		end
	end
end

local function removeAllPlayerLabels()
	for _, label in pairs(playerLabels) do
		label:Destroy()
	end
	playerLabels = {}
	
	for _, tracer in pairs(playerTracers) do
		tracer:Destroy()
	end
	playerTracers = {}
end

local function createPlayerLabelsForExistingPlayers()
	for _, p in pairs(Players:GetPlayers()) do
		if p ~= player then
			playerLabels[p] = createPlayerLabel()
			playerTracers[p] = createPlayerTracer()
		end
	end
end

Players.PlayerAdded:Connect(function(p)
	if p ~= player then playerLabels[p] = createPlayerLabel() playerTracers[p] = createPlayerTracer() end
end)
Players.PlayerRemoving:Connect(function(p)
	local label = playerLabels[p]
	if label then label:Destroy() playerLabels[p] = nil end
	local tracer = playerTracers[p]
	if tracer then tracer:Destroy() playerTracers[p] = nil end
end)

createPlayerLabelsForExistingPlayers()

RunService.RenderStepped:Connect(function()
	local myRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
	if not myRootPart then return end
	local isPlayerLabelEspActive = playerCheckboxState["Username ESP"] or playerCheckboxState["Distance ESP"]
	local isTracingActive = playerCheckboxState["Player Tracing"]
	if isPlayerLabelEspActive then updatePlayerLabels() else for _, label in pairs(playerLabels) do label.Visible = false end end
	if isTracingActive then updatePlayerTracers() else for _, tracer in pairs(playerTracers) do tracer.Transparency = 1 end end
	if activeTabName == "ESP" and (npcCheckboxState["Set Home Point"] or npcCheckboxState["Boat Dealer"]) then updateNpcLabels() else for _, label in pairs(npcLabels) do label.Visible = false end end
end)

nukeButton.MouseButton1Click:Connect(function()
	screenGui:Destroy()
	removeAllPlayerLabels()
	TracerContainer:Destroy()
end)

